//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/10/08 - 23:11:13
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using BRCTransport.Domain;
using BRCTransport.Database.ORM;

namespace BRCTransport.Domain
{

    /// <summary>
    /// Assembler for <see cref="tblConsignmentNote"/> and <see cref="tblConsignmentNoteDTO"/>.
    /// </summary>
    public static partial class tblConsignmentNoteAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblConsignmentNoteDTO"/> converted from <see cref="tblConsignmentNote"/>.</param>
        static partial void OnDTO(this tblConsignmentNote entity, tblConsignmentNoteDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblConsignmentNote"/> converted from <see cref="tblConsignmentNoteDTO"/>.</param>
        static partial void OnEntity(this tblConsignmentNoteDTO dto, tblConsignmentNote entity);

        /// <summary>
        /// Converts this instance of <see cref="tblConsignmentNoteDTO"/> to an instance of <see cref="tblConsignmentNote"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblConsignmentNoteDTO"/> to convert.</param>
        public static tblConsignmentNote ToEntity(this tblConsignmentNoteDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblConsignmentNote();

            entity.ConsignmentId = dto.ConsignmentId;
            entity.ConsignmentNoteNo = dto.ConsignmentNoteNo;
            entity.CompanyName = dto.CompanyName;
            entity.PolicyNo = dto.PolicyNo;
            entity.CompanyDate = dto.CompanyDate;
            entity.CompanyAmount = dto.CompanyAmount;
            entity.CompanyPhone = dto.CompanyPhone;
            entity.ConsigneeId = dto.ConsigneeId;
            entity.ConsignorId = dto.ConsignorId;
            entity.ConsigneeInvoiceNo = dto.ConsigneeInvoiceNo;
            entity.ConsigneeServiceTaxRegNo = dto.ConsigneeServiceTaxRegNo;
            entity.ConsignorPurchaseOrderNo = dto.ConsignorPurchaseOrderNo;
            entity.ConsignorServiceTaxRegNo = dto.ConsignorServiceTaxRegNo;
            entity.FromCode = dto.FromCode;
            entity.ToCode = dto.ToCode;
            entity.NoofPackages = dto.NoofPackages;
            entity.MethodOfPacking = dto.MethodOfPacking;
            entity.ActualWtInKGS = dto.ActualWtInKGS;
            entity.CategoryOfLoad = dto.CategoryOfLoad;
            entity.Rate = dto.Rate;
            entity.LoadType = dto.LoadType;
            entity.Distance = dto.Distance;
            entity.KMS = dto.KMS;
            entity.DescriptionSaidToContain = dto.DescriptionSaidToContain;
            entity.PrivateMarketOtherIdentificaion = dto.PrivateMarketOtherIdentificaion;
            entity.BusinessType = dto.BusinessType;
            entity.AdvancedPaymentMRNo = dto.AdvancedPaymentMRNo;
            entity.AdvancedPaymentDate = dto.AdvancedPaymentDate;
            entity.AdvancedPaymentAmount = dto.AdvancedPaymentAmount;
            entity.DimensionLength = dto.DimensionLength;
            entity.DimensionWidth = dto.DimensionWidth;
            entity.DimensionHeight = dto.DimensionHeight;
            entity.DimensionNoOfPKGS = dto.DimensionNoOfPKGS;
            entity.DimensionTotalCFTCMT = dto.DimensionTotalCFTCMT;
            entity.DimensionSinglePieceWeight = dto.DimensionSinglePieceWeight;
            entity.DeclarationNo = dto.DeclarationNo;
            entity.ValidUpto = dto.ValidUpto;
            entity.DeclaredValueOfGoods = dto.DeclaredValueOfGoods;
            entity.BasicOfBooking = dto.BasicOfBooking;
            entity.BilledWithMs = dto.BilledWithMs;
            entity.BranchCode = dto.BranchCode;
            entity.ToPay = dto.ToPay;
            entity.Rebooking = dto.Rebooking;
            entity.MainConsignmentNo = dto.MainConsignmentNo;
            entity.GoodRecievedDetails = dto.GoodRecievedDetails;
            entity.Charges1 = dto.Charges1;
            entity.Amount1 = dto.Amount1;
            entity.Charges2 = dto.Charges2;
            entity.Amount2 = dto.Amount2;
            entity.Charges3 = dto.Charges3;
            entity.Amount3 = dto.Amount3;
            entity.Charges4 = dto.Charges4;
            entity.Amount4 = dto.Amount4;
            entity.Charges5 = dto.Charges5;
            entity.Amount5 = dto.Amount5;
            entity.FinalAmount = dto.FinalAmount;
            entity.ServiceTaxisPayableBy = dto.ServiceTaxisPayableBy;
            entity.PanNo = dto.PanNo;
            entity.PartyCode = dto.PartyCode;
            entity.ServicetaxThrough = dto.ServicetaxThrough;
            entity.ValidType = dto.ValidType;
            entity.PhoneNo = dto.PhoneNo;
            entity.AddressofIssuing = dto.AddressofIssuing;
            entity.ConsignmentDate = dto.ConsignmentDate;
            entity.CentralisedServiceTaxRegnNo = dto.CentralisedServiceTaxRegnNo;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblConsignmentNote"/> to an instance of <see cref="tblConsignmentNoteDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblConsignmentNote"/> to convert.</param>
        public static tblConsignmentNoteDTO ToDTO(this tblConsignmentNote entity)
        {
            if (entity == null) return null;

            var dto = new tblConsignmentNoteDTO();

            dto.ConsignmentId = entity.ConsignmentId;
            dto.ConsignmentNoteNo = entity.ConsignmentNoteNo;
            dto.CompanyName = entity.CompanyName;
            dto.PolicyNo = entity.PolicyNo;
            dto.CompanyDate = entity.CompanyDate;
            dto.CompanyAmount = entity.CompanyAmount;
            dto.CompanyPhone = entity.CompanyPhone;
            dto.ConsigneeId = entity.ConsigneeId;
            dto.ConsignorId = entity.ConsignorId;
            dto.ConsigneeInvoiceNo = entity.ConsigneeInvoiceNo;
            dto.ConsigneeServiceTaxRegNo = entity.ConsigneeServiceTaxRegNo;
            dto.ConsignorPurchaseOrderNo = entity.ConsignorPurchaseOrderNo;
            dto.ConsignorServiceTaxRegNo = entity.ConsignorServiceTaxRegNo;
            dto.FromCode = entity.FromCode;
            dto.ToCode = entity.ToCode;
            dto.NoofPackages = entity.NoofPackages;
            dto.MethodOfPacking = entity.MethodOfPacking;
            dto.ActualWtInKGS = entity.ActualWtInKGS;
            dto.CategoryOfLoad = entity.CategoryOfLoad;
            dto.Rate = entity.Rate;
            dto.LoadType = entity.LoadType;
            dto.Distance = entity.Distance;
            dto.KMS = entity.KMS;
            dto.DescriptionSaidToContain = entity.DescriptionSaidToContain;
            dto.PrivateMarketOtherIdentificaion = entity.PrivateMarketOtherIdentificaion;
            dto.BusinessType = entity.BusinessType;
            dto.AdvancedPaymentMRNo = entity.AdvancedPaymentMRNo;
            dto.AdvancedPaymentDate = entity.AdvancedPaymentDate;
            dto.AdvancedPaymentAmount = entity.AdvancedPaymentAmount;
            dto.DimensionLength = entity.DimensionLength;
            dto.DimensionWidth = entity.DimensionWidth;
            dto.DimensionHeight = entity.DimensionHeight;
            dto.DimensionNoOfPKGS = entity.DimensionNoOfPKGS;
            dto.DimensionTotalCFTCMT = entity.DimensionTotalCFTCMT;
            dto.DimensionSinglePieceWeight = entity.DimensionSinglePieceWeight;
            dto.DeclarationNo = entity.DeclarationNo;
            dto.ValidUpto = entity.ValidUpto;
            dto.DeclaredValueOfGoods = entity.DeclaredValueOfGoods;
            dto.BasicOfBooking = entity.BasicOfBooking;
            dto.BilledWithMs = entity.BilledWithMs;
            dto.BranchCode = entity.BranchCode;
            dto.ToPay = entity.ToPay;
            dto.Rebooking = entity.Rebooking;
            dto.MainConsignmentNo = entity.MainConsignmentNo;
            dto.GoodRecievedDetails = entity.GoodRecievedDetails;
            dto.Charges1 = entity.Charges1;
            dto.Amount1 = entity.Amount1;
            dto.Charges2 = entity.Charges2;
            dto.Amount2 = entity.Amount2;
            dto.Charges3 = entity.Charges3;
            dto.Amount3 = entity.Amount3;
            dto.Charges4 = entity.Charges4;
            dto.Amount4 = entity.Amount4;
            dto.Charges5 = entity.Charges5;
            dto.Amount5 = entity.Amount5;
            dto.FinalAmount = entity.FinalAmount;
            dto.ServiceTaxisPayableBy = entity.ServiceTaxisPayableBy;
            dto.PanNo = entity.PanNo;
            dto.PartyCode = entity.PartyCode;
            dto.ServicetaxThrough = entity.ServicetaxThrough;
            dto.ValidType = entity.ValidType;
            dto.PhoneNo = entity.PhoneNo;
            dto.AddressofIssuing = entity.AddressofIssuing;
            dto.ConsignmentDate = entity.ConsignmentDate;
            dto.CentralisedServiceTaxRegnNo = entity.CentralisedServiceTaxRegnNo;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblConsignmentNoteDTO"/> to an instance of <see cref="tblConsignmentNote"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblConsignmentNote> ToEntities(this IEnumerable<tblConsignmentNoteDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblConsignmentNote"/> to an instance of <see cref="tblConsignmentNoteDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblConsignmentNoteDTO> ToDTOs(this IEnumerable<tblConsignmentNote> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
