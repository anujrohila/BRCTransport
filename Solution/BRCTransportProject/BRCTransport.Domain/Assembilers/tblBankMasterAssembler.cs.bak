//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-12-13 - 19:31:55
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using BRCTransport.Domain.DTO;
using BRCTransport.Database.ORM;

namespace BRCTransport.Domain.Assembilers
{

    /// <summary>
    /// Assembler for <see cref="tblBankMaster"/> and <see cref="tblBankMasterDTO"/>.
    /// </summary>
    public static partial class tblBankMasterAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblBankMasterDTO"/> converted from <see cref="tblBankMaster"/>.</param>
        static partial void OnDTO(this tblBankMaster entity, tblBankMasterDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblBankMaster"/> converted from <see cref="tblBankMasterDTO"/>.</param>
        static partial void OnEntity(this tblBankMasterDTO dto, tblBankMaster entity);

        /// <summary>
        /// Converts this instance of <see cref="tblBankMasterDTO"/> to an instance of <see cref="tblBankMaster"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblBankMasterDTO"/> to convert.</param>
        public static tblBankMaster ToEntity(this tblBankMasterDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblBankMaster();

            entity.BankId = dto.BankId;
            entity.BankName = dto.BankName;
            entity.AccountNo = dto.AccountNo;
            entity.AccountType = dto.AccountType;
            entity.Addrees = dto.Addrees;
            entity.PhoneNo = dto.PhoneNo;
            entity.Description = dto.Description;
            entity.OpeningBalance = dto.OpeningBalance;
            entity.OpeningDate = dto.OpeningDate;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblBankMaster"/> to an instance of <see cref="tblBankMasterDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblBankMaster"/> to convert.</param>
        public static tblBankMasterDTO ToDTO(this tblBankMaster entity)
        {
            if (entity == null) return null;

            var dto = new tblBankMasterDTO();

            dto.BankId = entity.BankId;
            dto.BankName = entity.BankName;
            dto.AccountNo = entity.AccountNo;
            dto.AccountType = entity.AccountType;
            dto.Addrees = entity.Addrees;
            dto.PhoneNo = entity.PhoneNo;
            dto.Description = entity.Description;
            dto.OpeningBalance = entity.OpeningBalance;
            dto.OpeningDate = entity.OpeningDate;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBankMasterDTO"/> to an instance of <see cref="tblBankMaster"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblBankMaster> ToEntities(this IEnumerable<tblBankMasterDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBankMaster"/> to an instance of <see cref="tblBankMasterDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblBankMasterDTO> ToDTOs(this IEnumerable<tblBankMaster> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
