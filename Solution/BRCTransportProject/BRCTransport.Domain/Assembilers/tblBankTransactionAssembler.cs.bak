//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-12-13 - 19:31:56
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using BRCTransport.Domain.DTO;
using BRCTransport.Database.ORM;

namespace BRCTransport.Domain.Assembilers
{

    /// <summary>
    /// Assembler for <see cref="tblBankTransaction"/> and <see cref="tblBankTransactionDTO"/>.
    /// </summary>
    public static partial class tblBankTransactionAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblBankTransactionDTO"/> converted from <see cref="tblBankTransaction"/>.</param>
        static partial void OnDTO(this tblBankTransaction entity, tblBankTransactionDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblBankTransaction"/> converted from <see cref="tblBankTransactionDTO"/>.</param>
        static partial void OnEntity(this tblBankTransactionDTO dto, tblBankTransaction entity);

        /// <summary>
        /// Converts this instance of <see cref="tblBankTransactionDTO"/> to an instance of <see cref="tblBankTransaction"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblBankTransactionDTO"/> to convert.</param>
        public static tblBankTransaction ToEntity(this tblBankTransactionDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblBankTransaction();

            entity.TransactionId = dto.TransactionId;
            entity.BankId = dto.BankId;
            entity.TDate = dto.TDate;
            entity.TType = dto.TType;
            entity.DrAmount = dto.DrAmount;
            entity.CrAmount = dto.CrAmount;
            entity.Description = dto.Description;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblBankTransaction"/> to an instance of <see cref="tblBankTransactionDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblBankTransaction"/> to convert.</param>
        public static tblBankTransactionDTO ToDTO(this tblBankTransaction entity)
        {
            if (entity == null) return null;

            var dto = new tblBankTransactionDTO();

            dto.TransactionId = entity.TransactionId;
            dto.BankId = entity.BankId;
            dto.TDate = entity.TDate;
            dto.TType = entity.TType;
            dto.DrAmount = entity.DrAmount;
            dto.CrAmount = entity.CrAmount;
            dto.Description = entity.Description;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBankTransactionDTO"/> to an instance of <see cref="tblBankTransaction"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblBankTransaction> ToEntities(this IEnumerable<tblBankTransactionDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBankTransaction"/> to an instance of <see cref="tblBankTransactionDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblBankTransactionDTO> ToDTOs(this IEnumerable<tblBankTransaction> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
