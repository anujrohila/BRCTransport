//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014-12-14 - 15:52:00
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using BRCTransport.Domain;
using BRCTransport.Database.ORM;

namespace BRCTransport.Domain
{

    /// <summary>
    /// Assembler for <see cref="tblTransaction"/> and <see cref="tblTransactionDTO"/>.
    /// </summary>
    public static partial class tblTransactionAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblTransactionDTO"/> converted from <see cref="tblTransaction"/>.</param>
        static partial void OnDTO(this tblTransaction entity, tblTransactionDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblTransaction"/> converted from <see cref="tblTransactionDTO"/>.</param>
        static partial void OnEntity(this tblTransactionDTO dto, tblTransaction entity);

        /// <summary>
        /// Converts this instance of <see cref="tblTransactionDTO"/> to an instance of <see cref="tblTransaction"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblTransactionDTO"/> to convert.</param>
        public static tblTransaction ToEntity(this tblTransactionDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblTransaction();

            entity.TransactionId = dto.TransactionId;
            entity.AccountId = dto.AccountId;
            entity.TDate = dto.TDate;
            entity.DrAmount = dto.DrAmount;
            entity.CrAmount = dto.CrAmount;
            entity.Recievedby = dto.Recievedby;
            entity.PaidBy = dto.PaidBy;
            entity.Description = dto.Description;
            entity.ChequeNo = dto.ChequeNo;
            entity.ChequeDate = dto.ChequeDate;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblTransaction"/> to an instance of <see cref="tblTransactionDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblTransaction"/> to convert.</param>
        public static tblTransactionDTO ToDTO(this tblTransaction entity)
        {
            if (entity == null) return null;

            var dto = new tblTransactionDTO();

            dto.TransactionId = entity.TransactionId;
            dto.AccountId = entity.AccountId;
            dto.TDate = entity.TDate;
            dto.DrAmount = entity.DrAmount;
            dto.CrAmount = entity.CrAmount;
            dto.Recievedby = entity.Recievedby;
            dto.PaidBy = entity.PaidBy;
            dto.Description = entity.Description;
            dto.ChequeNo = entity.ChequeNo;
            dto.ChequeDate = entity.ChequeDate;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblTransactionDTO"/> to an instance of <see cref="tblTransaction"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblTransaction> ToEntities(this IEnumerable<tblTransactionDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblTransaction"/> to an instance of <see cref="tblTransactionDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblTransactionDTO> ToDTOs(this IEnumerable<tblTransaction> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
