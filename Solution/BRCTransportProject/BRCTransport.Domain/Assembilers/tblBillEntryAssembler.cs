//-------------------------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EntitiesToDTOs.v3.2 (entitiestodtos.codeplex.com).
//     Timestamp: 2014/09/28 - 16:22:54
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//-------------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Text;
using System.Linq;
using BRCTransport.Domain;
using BRCTransport.Database.ORM;

namespace BRCTransport.Domain
{

    /// <summary>
    /// Assembler for <see cref="tblBillEntry"/> and <see cref="tblBillEntryDTO"/>.
    /// </summary>
    public static partial class tblBillEntryAssembler
    {
        /// <summary>
        /// Invoked when <see cref="ToDTO"/> operation is about to return.
        /// </summary>
        /// <param name="dto"><see cref="tblBillEntryDTO"/> converted from <see cref="tblBillEntry"/>.</param>
        static partial void OnDTO(this tblBillEntry entity, tblBillEntryDTO dto);

        /// <summary>
        /// Invoked when <see cref="ToEntity"/> operation is about to return.
        /// </summary>
        /// <param name="entity"><see cref="tblBillEntry"/> converted from <see cref="tblBillEntryDTO"/>.</param>
        static partial void OnEntity(this tblBillEntryDTO dto, tblBillEntry entity);

        /// <summary>
        /// Converts this instance of <see cref="tblBillEntryDTO"/> to an instance of <see cref="tblBillEntry"/>.
        /// </summary>
        /// <param name="dto"><see cref="tblBillEntryDTO"/> to convert.</param>
        public static tblBillEntry ToEntity(this tblBillEntryDTO dto)
        {
            if (dto == null) return null;

            var entity = new tblBillEntry();

            entity.BillOrderId = dto.BillOrderId;
            entity.BillId = dto.BillId;
            entity.BookingOldBrCode = dto.BookingOldBrCode;
            entity.OldBillNo = dto.OldBillNo;
            entity.OldBillDate = dto.OldBillDate;
            entity.DestnCode = dto.DestnCode;
            entity.Particulars = dto.Particulars;
            entity.ChargedWeight = dto.ChargedWeight;
            entity.Rate = dto.Rate;
            entity.Amount = dto.Amount;

            dto.OnEntity(entity);

            return entity;
        }

        /// <summary>
        /// Converts this instance of <see cref="tblBillEntry"/> to an instance of <see cref="tblBillEntryDTO"/>.
        /// </summary>
        /// <param name="entity"><see cref="tblBillEntry"/> to convert.</param>
        public static tblBillEntryDTO ToDTO(this tblBillEntry entity)
        {
            if (entity == null) return null;

            var dto = new tblBillEntryDTO();

            dto.BillOrderId = entity.BillOrderId;
            dto.BillId = entity.BillId;
            dto.BookingOldBrCode = entity.BookingOldBrCode;
            dto.OldBillNo = entity.OldBillNo;
            dto.OldBillDate = entity.OldBillDate;
            dto.DestnCode = entity.DestnCode;
            dto.Particulars = entity.Particulars;
            dto.ChargedWeight = entity.ChargedWeight;
            dto.Rate = entity.Rate;
            dto.Amount = entity.Amount ?? 0;

            entity.OnDTO(dto);

            return dto;
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBillEntryDTO"/> to an instance of <see cref="tblBillEntry"/>.
        /// </summary>
        /// <param name="dtos"></param>
        /// <returns></returns>
        public static List<tblBillEntry> ToEntities(this IEnumerable<tblBillEntryDTO> dtos)
        {
            if (dtos == null) return null;

            return dtos.Select(e => e.ToEntity()).ToList();
        }

        /// <summary>
        /// Converts each instance of <see cref="tblBillEntry"/> to an instance of <see cref="tblBillEntryDTO"/>.
        /// </summary>
        /// <param name="entities"></param>
        /// <returns></returns>
        public static List<tblBillEntryDTO> ToDTOs(this IEnumerable<tblBillEntry> entities)
        {
            if (entities == null) return null;

            return entities.Select(e => e.ToDTO()).ToList();
        }

    }
}
